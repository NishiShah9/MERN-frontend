{"ast":null,"code":"var _jsxFileName = \"/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/PrivateRoute.js\";\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { TOKEN, ROUTES } from './Common/constant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const isToken = localStorage.getItem(TOKEN);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => !isToken ? /*#__PURE__*/_jsxDEV(Redirect, {\n      to: ROUTES.LOGIN\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 61\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/PrivateRoute.js"],"names":["React","Redirect","Route","TOKEN","ROUTES","PrivateRoute","component","Component","rest","isToken","localStorage","getItem","props","LOGIN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;;;AACA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACxD,QAAMC,OAAO,GAAGC,YAAY,CAACC,OAAb,CAAqBR,KAArB,CAAhB;AACA,sBACI,QAAC,KAAD,OACQK,IADR;AAEI,IAAA,MAAM,EAAGI,KAAD,IACJ,CAACH,OAAD,gBAAW,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEL,MAAM,CAACS;AAArB;AAAA;AAAA;AAAA;AAAA,YAAX,gBAA4C,QAAC,SAAD,OAAeD;AAAf;AAAA;AAAA;AAAA;AAAA;AAHpD;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAVD;;KAAMP,Y;AAWN,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { TOKEN, ROUTES } from './Common/constant';\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n    const isToken = localStorage.getItem(TOKEN)\n    return (\n        <Route\n            {...rest}\n            render={(props) =>\n                !isToken ? <Redirect to={ROUTES.LOGIN} /> : <Component {...props} />\n            }\n        />\n    );\n};\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}