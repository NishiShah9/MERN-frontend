{"ast":null,"code":"var _jsxFileName = \"/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/Component/Client/clientModal.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Select } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport { filter, last } from 'lodash';\nimport apiInstance from \"../Common/apiInstance\";\nimport React, { useContext, useState } from 'react';\nimport { toast } from '../../Common/utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nconst AddClientModal = props => {\n  _s();\n\n  const {\n    isUpdate,\n    showModal,\n    setShowModal,\n    setData,\n    data\n  } = props;\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const handleCancel = () => {\n    setShowModal(false);\n    form.resetFields();\n    setData();\n  };\n\n  const onUserSubmitFinish = async values => {\n    const variables = isUpdate ? { ...values,\n      id: data._id\n    } : { ...values\n    };\n    apiInstance('/user/register', {\n      method: 'POST',\n      data: variables\n    }).then(res => {\n      if (res.status == 200) {\n        debugger;\n        toast(res.data.message, 'error');\n        setData(res.data.data);\n        form.resetFields();\n        setShowModal(false);\n        props.reloadData();\n      }\n    }).catch((err, data) => {}).finally(() => {//   this.setLoading(false);\n    });\n  };\n\n  const handleAdd = () => {\n    setShowModal(true);\n    form.submit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: isUpdate ? 'Edit Client' : 'Add Client',\n    visible: showModal,\n    confirmLoading: loading,\n    onOk: handleAdd,\n    className: \"dialog\",\n    okText: isUpdate ? 'Save' : 'Add',\n    onCancel: handleCancel,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      initialValues: data,\n      layout: \"vertical\",\n      onFinish: onUserSubmitFinish,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: ['required'],\n        name: \"name\",\n        label: \"Name\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true,\n          placeholder: \"Enter Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: ['required'],\n        name: \"email\",\n        label: \"Email\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true,\n          type: \"email\",\n          placeholder: \"Enter Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        rules: ['required'],\n        name: \"password\",\n        label: \"password\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true,\n          type: \"password\",\n          placeholder: \"Enter Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"phone\",\n        label: \"Phone\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true,\n          placeholder: \"Enter Phone No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"Role\",\n        label: \"Role\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Select Role\",\n          disabled: isUpdate,\n          children: ROLE_TYPE.map(item => {\n            return /*#__PURE__*/_jsxDEV(Option, {\n              value: item === null || item === void 0 ? void 0 : item.value,\n              children: item === null || item === void 0 ? void 0 : item.label\n            }, item === null || item === void 0 ? void 0 : item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"about\",\n        label: \"About\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          allowClear: true,\n          placeholder: \"Enter About\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddClientModal, \"FCxCdtaVHl9b+6PEJSxL3SOPlbc=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = AddClientModal;\nexport default AddClientModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClientModal\");","map":{"version":3,"sources":["/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/Component/Client/clientModal.js"],"names":["Form","Input","Select","Modal","filter","last","apiInstance","React","useContext","useState","toast","Option","AddClientModal","props","isUpdate","showModal","setShowModal","setData","data","loading","setLoading","form","useForm","handleCancel","resetFields","onUserSubmitFinish","values","variables","id","_id","method","then","res","status","message","reloadData","catch","err","finally","handleAdd","submit","ROLE_TYPE","map","item","value","label"],"mappings":"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","sourcesContent":["import { Form, Input, Select } from 'antd';\nimport Modal from 'antd/lib/modal/Modal';\nimport { filter, last } from 'lodash';\nimport apiInstance from \"../Common/apiInstance\"\nimport React, { useContext, useState } from 'react';\nimport { toast } from '../../Common/utils';\n\nconst { Option } = Select;\n\nconst AddClientModal = (props) => {\n    const {\n        isUpdate,\n        showModal,\n        setShowModal,\n        setData,\n        data\n    } = props;\n\n    const [loading, setLoading] = useState(false);\n    const [form] = Form.useForm();\n\n    const handleCancel = () => {\n        setShowModal(false);\n        form.resetFields();\n        setData();\n    };\n\n    const onUserSubmitFinish = async (values) => {\n        const variables = isUpdate\n            ? { ...values, id: data._id }\n            : { ...values };\n        apiInstance('/user/register', {\n            method: 'POST',\n            data: variables,\n        })\n            .then((res) => {\n                if (res.status == 200) {\n                    debugger\n                    toast(res.data.message, 'error')\n                    setData(res.data.data)\n                    form.resetFields();\n                    setShowModal(false);\n                    props.reloadData();\n                }\n            })\n            .catch((err, data) => {\n            })\n            .finally(() => {\n                //   this.setLoading(false);\n            });\n\n    };\n\n    const handleAdd = () => {\n        setShowModal(true);\n        form.submit();\n    };\n\n    return (\n        <Modal\n            title={isUpdate ? 'Edit Client' : 'Add Client'}\n            visible={showModal}\n            confirmLoading={loading}\n            onOk={handleAdd}\n            className=\"dialog\"\n            okText={isUpdate ? 'Save' : 'Add'}\n            onCancel={handleCancel}\n        >\n            <Form\n                form={form}\n                initialValues={data}\n                layout=\"vertical\"\n                onFinish={onUserSubmitFinish}\n            >\n                <Form.Item rules={['required']} name=\"name\" label=\"Name\">\n                    <Input allowClear placeholder=\"Enter Name\" />\n                </Form.Item>\n                <Form.Item rules={['required']} name=\"email\" label=\"Email\">\n                    <Input allowClear type=\"email\" placeholder=\"Enter Email\" />\n                </Form.Item>\n                <Form.Item rules={['required']} name=\"password\" label=\"password\">\n                    <Input allowClear type=\"password\" placeholder=\"Enter Password\" />\n                </Form.Item>\n                <Form.Item name=\"phone\" label=\"Phone\">\n                    <Input allowClear placeholder=\"Enter Phone No\" />\n                </Form.Item>\n                <Form.Item name=\"Role\" label=\"Role\">\n                    <Select placeholder=\"Select Role\" disabled={isUpdate}>\n                        {ROLE_TYPE.map((item) => {\n                            return (\n                                <Option key={item?.value} value={item?.value}>\n                                    {item?.label}\n                                </Option>\n                            );\n                        })}\n                    </Select>\n                </Form.Item>\n                <Form.Item name=\"about\" label=\"About\">\n                    <Input allowClear placeholder=\"Enter About\" />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default AddClientModal;\n"]},"metadata":{},"sourceType":"module"}