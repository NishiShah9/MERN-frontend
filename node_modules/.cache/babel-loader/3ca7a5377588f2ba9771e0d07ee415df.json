{"ast":null,"code":"var _jsxFileName = \"/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/Component/Login/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport UserList from '../../Common/users.json';\nimport { toast } from '../../Common/utils';\nimport { PASSWORD, USER } from '../../Common/constant';\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const history = useHistory();\n\n  const onFinish = values => {\n    let response = UserList; // react content from user.json file\n\n    if (response.users) {\n      let userExist = response.users.find(o => o.email === values.email);\n\n      if (userExist) {\n        if (userExist.password === values.password) {\n          let encrptPassword = CryptoJs.AES.encrypt(values.password, process.env.REACT_APP_SECRET_KEY).toString();\n          localStorage.setItem(PASSWORD, encrptPassword); // encrypt the password and store in localstorage\n\n          localStorage.setItem(USER, JSON.stringify(userExist));\n          toast('Login Sucessful!', 'success');\n          history.push(\"/\");\n        } else {\n          toast('Invalid Password', 'error');\n        }\n      } else {\n        toast('Email does not Exist', 'error');\n      }\n    } else {\n      toast('Something went wrong', 'error');\n    }\n  };\n\n  const onFinishFailed = error => {\n    console.log('Failed:', error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        name: \"login\",\n        labelCol: {\n          span: 8\n        },\n        wrapperCol: {\n          span: 16\n        },\n        onFinish: onFinish,\n        colon: false,\n        requiredMark: false,\n        onFinishFailed: onFinishFailed,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Email\",\n          name: \"email\",\n          rules: [{\n            required: true,\n            message: 'Please enter email!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Password\",\n          name: \"password\",\n          rules: [{\n            required: true,\n            message: 'Please enter password!'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          className: \"login-button\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/lw-3/nishi/Social Media Clone/Demo/frontend/src/Component/Login/index.js"],"names":["React","Form","Input","Button","UserList","toast","PASSWORD","USER","useHistory","Login","props","history","onFinish","values","response","users","userExist","find","o","email","password","encrptPassword","CryptoJs","AES","encrypt","process","env","REACT_APP_SECRET_KEY","toString","localStorage","setItem","JSON","stringify","push","onFinishFailed","error","console","log","span","required","message"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Input, Button } from 'antd';\nimport UserList from '../../Common/users.json';\nimport { toast } from '../../Common/utils';\nimport { PASSWORD, USER } from '../../Common/constant';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Login = (props) => {\n    const history = useHistory();\n    const onFinish = (values) => {\n        let response = UserList // react content from user.json file\n        if (response.users) {\n            let userExist = response.users.find((o) => o.email === values.email);\n            if (userExist) {\n                if (userExist.password === values.password) {\n                    let encrptPassword = CryptoJs.AES.encrypt(values.password, process.env.REACT_APP_SECRET_KEY).toString();\n                    localStorage.setItem(PASSWORD, encrptPassword) // encrypt the password and store in localstorage\n                    localStorage.setItem(USER, JSON.stringify(userExist))\n                    toast('Login Sucessful!', 'success')\n                    history.push(\"/\")\n                } else {\n                    toast('Invalid Password', 'error')\n                }\n            } else {\n                toast('Email does not Exist', 'error')\n            }\n        } else {\n            toast('Something went wrong', 'error')\n        }\n    };\n\n    const onFinishFailed = (error) => {\n        console.log('Failed:', error);\n    };\n\n    return (\n        <div className=\"outer\">\n            <div className=\"login-card\">\n                <h1>Login</h1>\n                <Form\n                    name=\"login\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    onFinish={onFinish}\n                    colon={false}\n                    requiredMark={false}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        label=\"Email\"\n                        name=\"email\"\n                        rules={[{ required: true, message: 'Please enter email!' }]}\n                    >\n                        <Input type=\"email\"/>\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[{ required: true, message: 'Please enter password!' }]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n\n                    <Form.Item className=\"login-button\">\n                        <Button type=\"primary\" htmlType=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}